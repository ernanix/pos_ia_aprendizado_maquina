##Maquina MP
setwd('C:\\Users\\escneto\\Documents\\Estudos\\Pos_IA_UFPR\\pos_ia_aprendizado_maquina\\Bases_de_teste')
dados <- read.csv(file = 'admissao\\admissao.csv')
dados_novos <- read.csv(file = 'admissao\\admissao.csv')
set.seed(728078902)
### Cria arquivos de treino e teste
ind <- createDataPartition(dados$ChanceOfAdmit, p=0.80, list = FALSE)
treino <- dados[ind,]
teste <- dados[-ind,]
### Função R2
F_r2 <- function(observado,predito) {
return(1 - (sum((observado-predito)^2) / sum((observado-mean(observado))^2)))
}
### Função MAE
F_MAE <- function(observado,predito,base) {
return(sum(abs(observado-predito)) / nrow(base))
}
### Função RMSE
F_RMSE <- function(observado,predito,base) {
return( sqrt(sum((observado-predito)^2) / nrow(base)) )
}
### Função Syx
F_SYX <- function(observado,predito,base) {
return(sum((observado-predito)^2) / (nrow(base) - (length(base)-1) ) )
}
########################## KNN
tuneGrid <- expand.grid(k = c(1,3,5,7,9))
### Executa o Knn com esse grid
knn <- train(ChanceOfAdmit ~ ., data = treino, method = "knn",
tuneGrid=tuneGrid)
### Aplica o modelo no arquivo de teste
predict.knn <- predict(knn, teste)
### Executa o Knn com esse grid
knn <- train(ChanceOfAdmit ~ ., data = treino, method = "knn",
tuneGrid=tuneGrid)
library("caret")
library(Metrics)
### Executa o Knn com esse grid
knn <- train(ChanceOfAdmit ~ ., data = treino, method = "knn",
tuneGrid=tuneGrid)
### Cria arquivos de treino e teste
ind <- createDataPartition(dados$ChanceOfAdmit, p=0.80, list = FALSE)
treino <- dados[ind,]
teste <- dados[-ind,]
### Função R2
F_r2 <- function(observado,predito) {
return(1 - (sum((observado-predito)^2) / sum((observado-mean(observado))^2)))
}
### Função MAE
F_MAE <- function(observado,predito,base) {
return(sum(abs(observado-predito)) / nrow(base))
}
### Função MAE
F_MAE <- function(observado,predito,base) {
return(sum(abs(observado-predito)) / nrow(base))
}
### Função RMSE
F_RMSE <- function(observado,predito,base) {
return( sqrt(sum((observado-predito)^2) / nrow(base)) )
}
### Função Syx
F_SYX <- function(observado,predito,base) {
return(sum((observado-predito)^2) / (nrow(base) - (length(base)-1) ) )
}
########################## KNN
tuneGrid <- expand.grid(k = c(1,3,5,7,9))
### Executa o Knn com esse grid
knn <- train(ChanceOfAdmit ~ ., data = treino, method = "knn",
tuneGrid=tuneGrid)
### Aplica o modelo no arquivo de teste
predict.knn <- predict(knn, teste)
F_SYX(teste$ChanceOfAdmit, predict.knn,teste)
