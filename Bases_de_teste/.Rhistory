install.packages("e1071")
install.packages("randomForest")
install.packages(randomForest)
install.packages("mice")
library(mice)
library(caret)
install.packages("mice")
install.packages("caret")
install.packages("e1071")
install.packages("Rtools")
install.packages("e1071")
install.packages("mice")
install.packages("e1071")
########################## Random Forest
rf <- train(tipo~.,data=treino,method="rf")
library("caret")
library(mlbench)
library(mice)
##Maquina MP
setwd('C:\\Users\\escneto\\Documents\\Estudos\\Pos_IA_UFPR\\pos_ia_aprendizado_maquina\\Bases_de_teste')
barra ="\\"
dados <- read.csv(file = paste('veiculos','veiculos.csv',sep =barra))
### set seed
set.seed(728078902)
### retira id
dados$a <- NULL
dados_novos$a <- NULL
###Cria arquivo de treino e teste
ran <- sample(1:nrow(dados), 0.8 * nrow(dados))
treino <- dados[ran,]
teste <- dados[-ran,]
########################## KNN
### Faz um grid com valores para K e Executa o KNN
tuneGrid <- expand.grid(k = c(1))
knn <- train(tipo ~ ., data = treino, method = "knn",tuneGrid=tuneGrid)
knn
########################## Random Forest
rf <- train(tipo~.,data=treino,method="rf")
install.packages("C:/Users/escneto/Downloads/randomForest_4.7-1.1.tar.gz", repos = NULL, type = "source")
########################## Random Forest
rf <- train(tipo~.,data=treino,method="rf")
rf
predict.rf <- predict(rf,teste)
confusionMatrix(predict.rf,as.factor(teste$tipo))
###Cross Validation
ctrl <- trainControl(method="cv",number=10)
rf_cv <- train(tipo~.,data=treino,method="rf",trControl=ctrl)
rf_cv
predict.rf_cv <- predict(rf_cv,teste)
confusionMatrix(predict.rf_cv,as.factor(teste$tipo))
###Parametrização
tuneGrid = expand.grid(mtry=c(2, 5, 7, 9))
rf_par <- train(tipo~.,data=treino,method="rf",trControl=ctrl,tuneGrid=tuneGrid)
rf_par
predict.rf_par <- predict(rf_par,teste)
confusionMatrix(predict.rf_par,as.factor(teste$tipo))
library("caret")
library(mlbench)
library(mice)
##Maquina MP
setwd('C:\\Users\\escneto\\Documents\\Estudos\\Pos_IA_UFPR\\pos_ia_aprendizado_maquina\\Bases_de_teste')
barra ="\\"
##Note
setwd('/Users/MPPR/Documents/Pos_IA/pos_ia_aprendizado_maquina/Bases_de_teste')
dados <- read.csv(file = paste('veiculos','veiculos.csv',sep =barra))
dados_novos <- read.csv(file = paste('veiculos','veiculos_novos.csv',sep =barra))
### set seed
set.seed(728078902)
### retira id
dados$a <- NULL
dados_novos$a <- NULL
View(dados_novos)
###Cria arquivo de treino e teste
ran <- sample(1:nrow(dados), 0.8 * nrow(dados))
treino <- dados[ran,]
teste <- dados[-ran,]
###Cross Validation
ctrl <- trainControl(method = "cv", number = 10)
###Parametrização
grid <-expand.grid(size=seq(from=1,to=45,by=10),decay=seq(from=0.1, to=0.9, by=0.3))
rna_par <- train(form=tipo~., data=treino, method="nnet", tuneGrid=grid, trControl=ctrl, maxit=2000, trace=FALSE)
rna_par
predict.rna_par <- predict(rna_par,teste)
confusionMatrix(predict.rna_par,as.factor(teste$tipo))
library("caret")
library(mlbench)
library(mice)
setwd('C:\\Users\\escneto\\Documents\\Estudos\\Pos_IA_UFPR\\pos_ia_aprendizado_maquina\\Bases_de_teste')
barra ="\\"
dados <- read.csv(file = paste('veiculos','veiculos.csv',sep =barra))
dados_novos <- read.csv(file = paste('veiculos','veiculos_novos.csv',sep =barra))
### set seed
set.seed(728078902)
### retira id
dados$a <- NULL
dados_novos$a <- NULL
ran <- sample(1:nrow(dados), 0.8 * nrow(dados))
treino <- dados[ran,]
teste <- dados[-ran,]
########################## KNN
tuneGrid <- expand.grid(k = c(1))
knn <- train(tipo ~ ., data = treino, method = "knn",tuneGrid=tuneGrid)
knn
predict.knn <- predict(knn, teste)
confusionMatrix(predict.knn, as.factor(teste$tipo))
########################## RNA
rna <- train(tipo~.,data=treino,method="nnet",trace=FALSE)
rna
predict.rna <-predict(rna,teste)
confusionMatrix(predict.rna,as.factor(teste$tipo))
ctrl <- trainControl(method = "cv", number = 10)
rna_cv <- train(tipo~.,data=treino,method="nnet",trace=FALSE,trControl=ctrl)
rna_cv
predict.rna_cv <- predict(rna_cv,teste)
confusionMatrix(predict.rna_cv,as.factor(teste$tipo))
grid <-expand.grid(size=seq(from=1,to=45,by=10),decay=seq(from=0.1, to=0.9, by=0.3))
rna_par <- train(form=tipo~., data=treino, method="nnet", tuneGrid=grid, trControl=ctrl, maxit=2000, trace=FALSE)
rna_par
predict.rna_par <- predict(rna_par,teste)
confusionMatrix(predict.rna_par,as.factor(teste$tipo))
svm <- train(tipo~.,data=treino,method="svmRadial")
########################## SVM
svm <- train(tipo~.,data=treino,method="svmRadial")
install.packages("kernlab")
install.packages("C:/Users/escneto/Downloads/kernlab_0.9-31.tar.gz", repos = NULL, type = "source")
svm <- train(tipo~.,data=treino,method="svmRadial")
svm
predict.svm <- predict(svm,teste)
confusionMatrix(predict.svm,as.factor(teste$tipo))
set.seed(728078902)
svm <- train(tipo~.,data=treino,method="svmRadial")
svm
predict.svm <- predict(svm,teste)
confusionMatrix(predict.svm,as.factor(teste$tipo))
svm <- train(tipo~.,data=treino,method="svmRadial")
svm
predict.svm <- predict(svm,teste)
confusionMatrix(predict.svm,as.factor(teste$tipo))
library("caret")
library(mlbench)
library(mice)
##Maquina MP
setwd('C:\\Users\\escneto\\Documents\\Estudos\\Pos_IA_UFPR\\pos_ia_aprendizado_maquina\\Bases_de_teste')
barra ="\\"
dados <- read.csv(file = paste('veiculos','veiculos.csv',sep =barra))
dados_novos <- read.csv(file = paste('veiculos','veiculos_novos.csv',sep =barra))
### retira id
dados$a <- NULL
dados_novos$a <- NULL
set.seed(728078902)
ran <- sample(1:nrow(dados), 0.8 * nrow(dados))
treino <- dados[ran,]
teste <- dados[-ran,]
set.seed(728078902)
tuneGrid <- expand.grid(k = c(1))
knn <- train(tipo ~ ., data = treino, method = "knn",tuneGrid=tuneGrid)
knn
predict.knn <- predict(knn, teste)
confusionMatrix(predict.knn, as.factor(teste$tipo))
set.seed(728078902)
rna <- train(tipo~.,data=treino,method="nnet",trace=FALSE)
rna
predict.rna <-predict(rna,teste)
confusionMatrix(predict.rna,as.factor(teste$tipo))
set.seed(728078902)
ctrl <- trainControl(method = "cv", number = 10)
rna_cv <- train(tipo~.,data=treino,method="nnet",trace=FALSE,trControl=ctrl)
rna_cv
predict.rna_cv <- predict(rna_cv,teste)
confusionMatrix(predict.rna_cv,as.factor(teste$tipo))
set.seed(728078902)
grid <-expand.grid(size=seq(from=1,to=45,by=10),decay=seq(from=0.1, to=0.9, by=0.3))
rna_par <- train(form=tipo~., data=treino, method="nnet", tuneGrid=grid, trControl=ctrl, maxit=2000, trace=FALSE)
rna_par
predict.rna_par <- predict(rna_par,teste)
confusionMatrix(predict.rna_par,as.factor(teste$tipo))
set.seed(728078902)
svm <- train(tipo~.,data=treino,method="svmRadial")
svm
predict.svm <- predict(svm,teste)
confusionMatrix(predict.svm,as.factor(teste$tipo))
set.seed(728078902)
svm <- train(tipo~.,data=treino,method="svmRadial")
svm
predict.svm <- predict(svm,teste)
confusionMatrix(predict.svm,as.factor(teste$tipo))
set.seed(728078902)
ctrl <- trainControl(method="cv",number=10)
svm_cv <- train(tipo~.,data=treino,method="svmRadial",trControl=ctrl)
svm_cv
predict.svm_cv <- predict(svm_cv,teste)
confusionMatrix(predict.svm_cv,as.factor(teste$tipo))
set.seed(728078902)
tuneGrid = expand.grid(C=c(1,2,10,50,100),sigma=c(.01,.015,0.2))
svm_par <- train(tipo~.,data=treino,method="svmRadial",trControl=ctrl,tuneGrid=tuneGrid)
svm_par
predict.svm_par <- predict(svm_par,teste)
confusionMatrix(predict.svm_par,as.factor(teste$tipo))
set.seed(728078902)
rf <- train(tipo~.,data=treino,method="rf")
rf
predict.rf <- predict(rf,teste)
confusionMatrix(predict.rf,as.factor(teste$tipo))
set.seed(728078902)
ctrl <- trainControl(method="cv",number=10)
rf_cv <- train(tipo~.,data=treino,method="rf",trControl=ctrl)
rf_cv
predict.rf_cv <- predict(rf_cv,teste)
confusionMatrix(predict.rf_cv,as.factor(teste$tipo))
set.seed(728078902)
tuneGrid = expand.grid(mtry=c(2, 5, 7, 9))
rf_par <- train(tipo~.,data=treino,method="rf",trControl=ctrl,tuneGrid=tuneGrid)
rf_par
predict.rf_par <- predict(rf_par,teste)
confusionMatrix(predict.rf_par,as.factor(teste$tipo))
svm
confusionMatrix(predict.svm,as.factor(teste$tipo))
confusionMatrix(predict.svm_cv,as.factor(teste$tipo))
confusionMatrix(predict.svm_par,as.factor(teste$tipo))
confusionMatrix(predict.rna_par,as.factor(teste$tipo))
########################## Novos casos
dados_novos$tipo <-NULL
predict.melhor_modelo <- predict(svm_par,dados_novos)
dados_novos <-cbind(dados_novos,predict.melhor_modelo)
View(dados_novos)
