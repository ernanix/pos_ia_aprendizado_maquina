install.packages("e1071")
install.packages("randomForest")
install.packages(randomForest)
install.packages("mice")
library(mice)
library(caret)
install.packages("mice")
install.packages("caret")
library(mlbench)
library(caret)
library(mice)
library(Metrics)
setwd('C:\\Users\\escneto\\Documents\\Estudos\\Pos_IA_UFPR\\pos_ia_aprendizado_maquina\\Bases_de_teste')
barra ="\\"
dados <- read.csv(file = paste('biomassa','biomassa.csv',sep =barra))
set.seed(728078902)
ind <- createDataPartition(dados$biomassa, p=0.80, list = FALSE)
treino <- dados[ind,]
teste <- dados[-ind,]
set.seed(728078902)
tuneGrid <- expand.grid(k = c(1,3,5,7,9))
knn <- train(biomassa ~ ., data = treino, method = "knn",
tuneGrid=tuneGrid)
knn
predict.knn <- predict(knn, teste)
########################## Gráfico de Resíduos
teste$biomassa
predict.knn
((teste$biomassa - predict.knn)/teste$biomassa) * 100
plot( (((teste$biomassa - predict.knn)/teste$biomassa) * 100 ~ predict.knn),
xlab="Valor estimado",
ylab="Resíduos (%)",
col=blue)
plot( (((teste$biomassa - predict.knn)/teste$biomassa) * 100 ~ predict.knn),
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
abline(h=0)
resid = ((teste$biomassa - predict.knn)/teste$biomassa) * 100
resid
plot(predict.knn ~ resid,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
abline(h=0)
plot( 7.820 ~ -10.608204,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
plot( 7.820 ~ -10.608204,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
predict.knn
resid
x = c(7.820,15.670,31.800)
y = c(-10.608204,-52.135922,-14.060258)
plot( x ~ y,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
abline(h=0)
plot( y ~ x,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
predict.knn
teste$biomassa
plot(resid ~ predict.knn,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
abline(h=0)
resid
hist(resid)
plot(resid ~ predict.knn,
xlab="Valor estimado",
ylab="Resíduos (%)",
col=2)
abline(h=0)
abline(h=0,col=4)
data("iris")
data("iris")
dados = scale(iris)
View(iris)
View (dados)
View (dados)
dados = scale(iris)
View (iris)
dados <- iris
dados <- iris
dados <- iris
set.seed(728078902)
irisCluster <- kmeans(iris[,3:4],10)
irisCluster
irisCluster <- kmeans(iris[,3:4],3)
irisCluster
resultado <- cbind(dados,irisCluster$cluster)
resultado
